apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{.Values.name}}
  name: {{.Values.name}}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{.Values.name}}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{.Values.name}}
      name: {{.Values.name}}
    spec:
      serviceAccountName: {{.Values.name | quote}}
      containers:
      - name: {{.Values.name}}
        image: {{.Values.image.name}}:{{.Values.image.tag}}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: {{.Values.container.probes.path}}
            port: {{.Values.container.httpPort}}
          initialDelaySeconds: {{.Values.container.probes.livenessDelay}}
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: {{.Values.container.probes.path}}
            port: {{.Values.container.httpPort}}
          initialDelaySeconds: {{.Values.container.probes.readinessDelay}}
          failureThreshold: 6
          periodSeconds: 20
        resources:
          limits:
            memory: {{.Values.container.limits.memory}}
          requests:
            memory: {{.Values.container.requests.memory}}
        env:
        {{- range $key, $value := .Values.container.env}}
        - name: {{$key}}
          value: "{{$value}}"
        {{- end}}
        {{- range $key, $value := .Values.container.secrets}}
        - name: {{$key}}
          valueFrom:
            secretKeyRef:
              name: {{$.Values.name}}
              key: {{$key}}
        {{- end}}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
